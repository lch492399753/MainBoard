#ifndef __USART_H
#define __USART_H
#include "stdio.h"	
#include "sys.h" 
#include "ring_buffer.h"
#include "CmdPrase.h"
//////////////////////////////////////////////////////////////////////////////////	 
//本程序只供学习使用，未经作者许可，不得用于其它任何用途
//ALIENTEK STM32开发板
//串口1初始化		   
//正点原子@ALIENTEK
//技术论坛:www.openedv.com
//修改日期:2012/8/18
//版本：V1.5
//版权所有，盗版必究。
//Copyright(C) 广州市星翼电子科技有限公司 2009-2019
//All rights reserved
//********************************************************************************
//V1.3修改说明 
//支持适应不同频率下的串口波特率设置.
//加入了对printf的支持
//增加了串口接收命令功能.
//修正了printf第一个字符丢失的bug
//V1.4修改说明
//1,修改串口初始化IO的bug
//2,修改了USART_RX_STA,使得串口最大接收字节数为2的14次方
//3,增加了USART_REC_LEN,用于定义串口最大允许接收的字节数(不大于2的14次方)
//4,修改了EN_USART1_RX的使能方式
//V1.5修改说明
//1,增加了对UCOSII的支持
#define USART_REC_LEN  			200  	//定义最大接收字节数 200
#define USART1_REC_LEN  		64  	//定义最大接收字节数 200
//#define USART2_REC_LEN  			200  	//定义最大接收字节数 200
//#define USART4_REC_LEN         200
//#define USART5_REC_LEN  			200  	//定义最大接收字节数 200
#define EN_USART1_RX 			1		//使能（1）/禁止（0）串口1接收
#define EN_USART2_RX 			1		//使能（1）/禁止（0）串口1接收
#define EN_USART3_RX 			1		//使能（1）/禁止（0）串口1接收
#define EN_USART4_RX 			1		//使能（1）/禁止（0）串口1接收
#define EN_USART5_RX 			1		//使能（1）/禁止（0）串口1接收	  	

#define USART2_BUFF_SIZE 32
#define USART3_BUFF_SIZE 256
extern uint8_t g_u8Usart2RecFlg ;
extern uint8_t g_u8Usart2RecLen ;
extern u8 g_cUSART2RxBuffer[USART2_BUFF_SIZE];
extern RINGBUFF_T g_tUSART2RxRingBuf;

extern char g_cUSART3RxBuffer[USART3_BUFF_SIZE];
extern char g_cUSART3TxBuffer[USART3_BUFF_SIZE];
extern RINGBUFF_T g_tUSART3RxRingBuf;
extern RINGBUFF_T g_tUSART3TxRingBuf;
extern u8  USART_RX_BUF[USART_REC_LEN]; //接收缓冲,最大USART_REC_LEN个字节.末字节为换行符
extern u8 USART2_RX_BUF[USART2_BUFF_SIZE];
extern u8  USART1_RX_BUF[USART1_REC_LEN];
extern u16 USART1_RX_STA;         		//接收状态标记
extern u16 USART2_RX_STA;
extern u16 USART_RX_STA;         		//接收状态标记	
extern char  redata[20000];
extern char  IDNdata[10000];
extern char  IDYdata[10000];
extern u16 USART4_RX_STA;
extern __align(8) u8 USART4_TX_BUF[1024];
extern u8  USART4_RX_BUF[USART_REC_LEN]; 
extern u8  USART5_RX_BUF[USART_REC_LEN]; //接收缓冲,最大USART_REC_LEN个字节.末字节为换行符 
extern u16 USART5_RX_STA;         		//接收状态标记	
extern  u16 Actual_Pwm;
extern  u16 Actual_Pwm1;
extern  u16 Actual_Pwm2;
extern  u16 Preset_Pwm;

#define UART5_REC_LEN 256
extern uint16_t UART5_RX_STA;
extern uint8_t UART5_RX_BUF[UART5_REC_LEN];

//如果想串口中断接收，请不要注释以下宏定义
void uart_init(u32 bound);
void uart2_init(u32 bound);
 
void uart3_init(u32 bound);
void uart4_init(u32 bound);

void usart1Printf(char *fmt, ...);
void usart2Printf(char *fmt, ...);
void usart3Printf(char *fmt, ...);
void usart4Printf(char *fmt, ...);

void DealRec(void);
void UART5_Configuration(u32 bound);

u8 atk_8266_send_cmd(u8 *cmd,u8 *ack,u16 waittime);
u8 atk_8266_send_date(u8 *cmd,u8 *ack,u16 waittime);
void USART3_SendStrings(unsigned char* str,uint8_t len);
extern const u8* portnum;
#endif


